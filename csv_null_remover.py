import pandas as pd

drop_list = [269550,
823650 ,
366550 ,
2098510,
2708570,
241790 ,
1264190,
1665830,
780820 ,
995660 ,
1006850,
464120 ,
2693120,
314730 ,
881390 ,
1667090,
1025020,
1189750,
1089000,
621300 ,
1500270,
2294630,
345300 ,
1592560,
485150 ,
1399680,
580310 ,
1091220,
2434070,
2156010,
680440 ,
1264640,
1010800,
930010 ,
1248360,
870820 ,
1740670,
1368950,
1454500,
1455360,
2810100,
1486350,
464170 ,
1895630,
2677750,
588350 ,
779810 ,
705830 ,
1125980,
2406920,
2400550,
1832750,
601780 ,
2494860,
374400 ,
583010 ,
1735480,
736280 ,
1870810,
1897570,
495480 ,
440520 ,
2588630,
703480 ,
523220 ,
2622140,
1018590,
2174170,
929270 ,
554820 ,
2698620,
2520980,
1325400,
689790 ,
1253550,
1252010,
523110 ,
2070990,
1698340,
1420890,
1422050,
1063520,
886420 ,
1512210,
1256350,
1221050,
345370 ,
393320 ,
1074880,
393330 ,
1074870,
1450860,
2314730,
2386460,
1113620,
2480680,
2496930,
840160 ,
2603950,
1105890,
625100 ,
1214250,
1326710,
1791990,
856070 ,
446830 ,
1799520,
1631280,
2135980,
1445700,
1875160,
1551180,
1140360,
1741830,
2307210,
773320 ,
2673460,
728920 ,
1174860,
861590 ,
1121930,
1542560,
617570 ,
579920 ,
432030 ,
978680 ,
744570 ,
978690 ,
746470 ,
2718190,
2718200,
338640 ,
1008160,
1043250,
2494510,
2218430,
2274070,
2463760,
2227420,
505550 ,
631130 ,
1202860,
2407480,
1085590,
491380 ,
529640 ,
613220 ,
617360 ,
1694750,
1876660,
1157130,
2370570,
857320 ,
1593130,
1106180,
332360 ,
1757120,
1098420,
1858750,
316830 ,
1638530,
2476950,
1380110,
1298040,
1251530,
778060 ,
444970 ,
456150 ,
726380 ,
992080 ,
2616260,
629520 ,
975550 ,
2436790,
821770 ,
1440240,
1228510,
1691040,
380080 ,
543510 ,
2717280,
1497850,
1716280,
388280 ,
483950 ,
1228760,
1632890,
1716070,
1278480,
925160 ,
1670320,
602920 ,
1905000,
1242710,
2284950,
845210 ,
1289520,
944770 ,
400040 ,
1148910,
524490 ,
518690 ,
908290 ,
441850 ,
672870 ,
1018680,
1855200,
509020 ,
1527140,
868400 ,
525420 ,
923350 ,
432330 ,
710460 ,
1733430,
327490 ,
2366410,
2550090,
1480140,
1066860,
521880 ,
1171220,
362870 ,
383730 ,
2218350,
1154430,
2158670,
1066110,
374690 ,
2184340,
1674730,
2134040,
707280 ,
419450 ,
1170130,
760970 ,
624330 ,
1329250,
1093310,
288730 ,
1923640,
844060 ,
262650 ,
352290 ,
983820 ,
967060 ,
1668660,
388980 ,
941490 ,
1995300,
1179300,
962230 ,
732710 ,
555810 ,
411340 ,
454550 ,
597910 ,
1140420,
2463110,
1464460,
1069090,
500590 ,
275030 ,
583870 ,
583850 ,
1279610,
1008250,
1358800,
1953110,
1074920,
406030 ,
368670 ,
376990 ,
1232210,
418290 ,
1074910,
1074930,
406060 ,
387770 ,
393340 ,
1075850,
406830 ,
1074900,
406050 ,
377040 ,
638610 ,
639370 ,
1075860,
406040 ,
387780 ,
671190 ,
617550 ,
708120 ,
1495870,
1103140,
1817300,
685300 ,
1019560,
746390 ,
1141530,
1017060,
1259150,
2852770,
314500 ,
2127930,
1734820,
1762550,
875460 ,
958210 ,
2531990,
1204050,
1683350,
2374970,
837510 ,
939360 ,
2299510,
2092200,
1516050,
1789160,
1568050,
2659520,
2949300,
1891300,
1547920,
583860 ,
909460 ,
586560 ,
1318170,
617580 ,
1688750,
770610 ,
596140 ,
1727320,
2225420,
710360 ,
497310 ,
2083130,
336530 ,
1498990,
601890 ,
415140 ,
571040 ,
524390 ,
2842280,
349280 ,
724460 ,
1102420,
1517370,
523410 ,
1949650,
2636780,
955610 ,
398810 ,
960200 ,
1206740,
416690 ,
279280 ,
241660 ,
1086240,
260990 ,
1937560,
1522320,
794930 ,
592350 ,
1241250,
573730 ,
703300 ,
1772160,
868480 ,
1830530,
1011110,
790730 ,
1982310,
1734480,
1197580,
1073720,
1632350,
677310 ,
1045650,
1244390,
345310 ,
839930 ,
2326970,
1204920,
1163170,
1553290,
620040 ,
1806340,
1865660,
250360 ,
919280 ,
2071010,
1696400,
1696420,
2576020,
2171290,
1783540,
1783530,
1418800,
2576030,
2171280,
1418790,
1420930,
1497120,
1403800,
2171300,
881680 ,
1164010,
2787090,
1837020,
1534490,
257650 ,
1529570,
1170750,
744880 ,
321540 ,
768970 ,
2064250,
1759710,
480710 ,
1176140,
218760 ,
1058990,
1373820,
441770 ,
821680 ,
2091610,
1727420,
1057220,
412470 ,
1440450,
2520820,
1118640,
2485190,
2095280,
403030 ,
766300 ,
1174980,
243890 ,
1675910,
1694730,
1269310,
372980 ,
616810 ,
942030 ,
428340 ,
433930 ,
1280420,
2234500,
1836380,
500570 ,
866130 ,
750840 ,
598860 ,
1363250,
670470 ,
670460 ,
511720 ,
821760 ,
665450 ,
575270 ,
700010 ,
506030 ,
386550 ,
670450 ,
1365420,
1022230,
1739590,
520040 ,
993090 ,
257610 ,
1533430,
616720 ,
714100 ,
1166490,
625480 ,
2178400,
428800 ,
315240 ,
2554760,
821780 ,
911310 ,
1203740,
1020820,
779260 ,
1152900,
1107950,
1148960,
976330 ,
763720 ,
1325730,
724070 ,
1246040,
1023710,
1445310,
2675800,
1046770,
562510 ,
1544600,
1200610,
1014130,
1123000,
1586630,
246820 ,
456450 ,
1491280,
1779210,
1771820,
411550 ,
363020 ,
1212360,
1407570,
2412080,
1620380,
1569670,
1308270,
1580630,
2567400,
714270 ,
1310860,
1183240,
630900 ,
1039110,
1195270,
1593790,
1702750,
1004740,
2148250,
794650 ,
1279020,
436740 ,
1477830,
1376260,
1463740,
1806090,
806830 ,
1079340,
1727670,
1985200,
2343860,
790900 ,
673400 ,
342570 ,
668020 ,
737820 ,
817610 ,
991080 ,
1213180,
1152420,
2810890,
834410 ,
1677660,
416670 ,
2518150,
446570 ,
2296360,
1662910,
684690 ,
989050 ,
1012510,
647670 ,
1037960,
372590 ,
980760 ,
1081520,
819510 ,
1527250,
1451150,
1735300,
1403840,
769670 ,
520840 ,
2220740,
717090 ,
415000 ,
292350 ,
435060 ,
809270 ,
1247290,
1570130,
1190750,
777180 ,
1274960,
2522350,
1607340,
1120310,
529830 ,
292230 ,
1086920,
257400 ,
2353750,
2701490,
2630010,
882030 ,
1507700,
942770 ,
966610 ,
725610 ,
1046610,
691020 ,
1853880,
1268040,
495800 ,
2789510,
1110580,
625080 ,
2289500,
458750 ,
2088420,
665680 ,
1172780,
2467960,
1433960,
1433980,
1434490,
1664920,
1741230,
1980470,
638310 ,
373000 ,
1221980,
1112440,
1588390,
939920 ,
504790 ,
1155230,
973360 ,
366530 ,
1523690,
1055010,
964080 ,
1877100,
1803800,
458360 ,
398240 ,
400650 ,
965070 ,
323620 ,
1113740,
2418080,
377010 ,
1810590,
979710 ,
588720 ,
486670 ,
377030 ,
1054580,
1175080,
1356110,
1303590,
592260 ,
1363650,
1524580,
2242470,
1366950,
234820 ,
920490 ,
735360 ,
545110 ,
403040 ,
1599300,
617560 ,
1282180,
259020 ,
1906050,
341960 ,
810080 ,
2247340,
227260 ,
2314880,
1686500,
682130 ,
1119570,
337070 ,
1856000,
2193030,
2488350,
1273620,
799310 ,
1968650,
1467560,
2416140,
1027220,
1335290,
1365760,
2422830,
312860 ,
288420 ,
395760 ,
1071700,
830640 ,
972390 ,
1488820,
2193970,
372390 ,
610340 ,
978990 ,
1914130,
755290 ,
2530750,
2530790,
2115620,
2115630,
679560 ,
679570 ,
501630 ,
501620 ,
425560 ,
2115640,
679550 ,
501600 ,
435750 ,
438110 ,
1455850,
1250070,
1299980,
2468390,
668660 ,
776180 ,
2095190,
2793600,
2385900,
2367970,
1244040,
1087080,
1035180,
1261060,
910370 ,
857350 ,
364970 ,
2442500,
773210 ,
367670 ,
2136920,
2238270,
1352750,
264420 ,
948220 ,
1388790,
2616440,
1519560,
1661460,
1286590,
1282740,
1101570,
1026450,
2349400,
478960 ,
1071860,
780100 ,
1746920,
2271950,
1471920,
1884960,
2402590,
1750210,
1659070,
834170 ,
527350 ,
1337970,
697860 ,
1796980,
272300 ,
2899310,
523600 ,
1969790,
1061690,
548760 ,
2845970,
305280 ,
1433970,
865770 ,
640720 ,
1208080,
352310 ,
1526020,
823180 ,
302130 ,
431570 ,
1420640,
1118380,
2592170,
1071100,
1133640,
980740 ,
993270 ,
686090 ,
365670 ,
1453950,
1126120,
940920 ,
233680 ,
1353710,
2484760,
322410 ,
2375780,
734580 ,
1571330,
1584060,
1009330,
253370 ,
833740 ,
1968280,
1137770,
2967830,
973260 ,
2668470,
2726120,
1513510,
1176110,
1370780,
1529240,
1052330,
738830 ,
1294770,
760710 ,
1832710,
1260310,
1522190,
690280 ,
431730 ,
1578190,
741150 ,
828800 ,
2234190,
2179990,
1070910,
598180 ,
391050 ,
1024640,
325180 ,
878890 ,
420130 ,
878880 ,
377000 ,
1364390,
1724880,
1696890,
2667350,
1050330,
1903810,
809220 ,
1757900,
1468090,
446060 ,
1146720,
1073420,
1881520,
1184960,
848340 ,
650460 ,
681410 ,
1433940,
241680 ,
228180 ,
2450380,
278190 ,
1105450,
2386980,
1466430,
301730 ,
2443700,
2839220,
871170 ,
1264470,
438450 ,
776920 ,
468900 ,
1099550,
927730 ,
1951950,
1201140,
1219140,
685770 ,
1864790,
1114720,
1847210]


# Load the CSV file into a DataFrame
df = pd.read_csv('csv_categories.csv')

# List of exact strings you want to drop

# Specify the column where the exact strings may appear
column_name = 'App_ID'  # Replace with your actual column name

# Filter rows that exactly match any of the strings in drop_list
dropped_rows = df[df[column_name].isin(drop_list)]

# Filter rows that do not exactly match the strings in drop_list
remaining_rows = df[~df[column_name].isin(drop_list)]

# Check if the number of dropped rows is 877
if len(dropped_rows) == 877:
    print(f"Exactly {len(dropped_rows)} rows will be dropped.")
else:
    print(f"Warning: Only {len(dropped_rows)} rows matched. Check your drop_list for correctness.")

# Save the dropped rows into a separate CSV file
dropped_rows.to_csv('dropped_values_exact_match.csv', index=False)

# Save the remaining rows into a new CSV file
remaining_rows.to_csv('cleaned_file_exact_match.csv', index=False)

print("Process complete. Files 'dropped_values_exact_match.csv' and 'cleaned_file_exact_match.csv' created.")
